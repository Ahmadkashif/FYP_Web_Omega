[{"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\reportWebVitals.js":"1","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\navbar2\\navbar2.js":"2","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\App.js":"3","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Main_Page\\MainPage.js":"4","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Navigator\\Navigator.js":"5","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Content\\Content.js":"6","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Header\\Header.js":"7","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Dashboard.js":"8","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\index.js":"9","C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\reportWebVitals.js":"10","C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\Dashboard\\Header\\Header.js":"11","C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\navbar2\\navbar2.js":"12","C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\MyContent\\Components\\PlayerCollectionCard.js":"13","C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\Dashboard\\Navigator\\Navigator.js":"14"},{"size":362,"mtime":1607441650646,"results":"15","hashOfConfig":"16"},{"size":322,"mtime":1607446363749,"results":"17","hashOfConfig":"16"},{"size":315,"mtime":1607523054322,"results":"18","hashOfConfig":"16"},{"size":1299,"mtime":1607446375384,"results":"19","hashOfConfig":"16"},{"size":4144,"mtime":1607692062752,"results":"20","hashOfConfig":"16"},{"size":2255,"mtime":1607619952275,"results":"21","hashOfConfig":"16"},{"size":4219,"mtime":1607616789336,"results":"22","hashOfConfig":"16"},{"size":4459,"mtime":1607617303257,"results":"23","hashOfConfig":"16"},{"size":500,"mtime":1607441650646,"results":"24","hashOfConfig":"16"},{"size":362,"mtime":1607441650646,"results":"25","hashOfConfig":"26"},{"size":2400,"mtime":1621342427147,"results":"27","hashOfConfig":"26"},{"size":322,"mtime":1607446363749,"results":"28","hashOfConfig":"26"},{"size":873,"mtime":1607625906392,"results":"29","hashOfConfig":"26"},{"size":4204,"mtime":1621342559119,"results":"30","hashOfConfig":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"10yz6f6",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"173x9lh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\reportWebVitals.js",[],["68","69"],"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\navbar2\\navbar2.js",["70"],"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\App.js",["71","72","73","74","75"],"import MainPage from './Main_Page/MainPage'\nimport {Route, Router,Switch} from 'react-router-dom'\nimport {ScrollRestoration} from 'react'\nimport './App.css';\nimport Dashboard from './Dashboard/Dashboard'\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Main_Page\\MainPage.js",["76"],"import React, { Component } from 'react';\r\nimport Navbar from '../navbar1/navbar'\r\nimport Navbar2 from '../navbar2/navbar2'\r\nclass MainPage extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar/>\r\n                <Navbar2/>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">TT Dashboard</h1>\r\n                        <p className=\"lead\"></p>\r\n                    </div>\r\n                \r\n                <div className = \"container\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col-3\">\r\n                        <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Game1</h5>\r\n                            <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                            <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                        </div>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainPage",["77","78"],"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Navigator\\Navigator.js",["79"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\n\r\nconst categories = [\r\n  {\r\n    id: 'Develop',\r\n    children: [\r\n      { id: 'Players', icon: <PeopleIcon />, active: true },\r\n      { id: 'Leaderboard', icon: <DnsRoundedIcon /> },\r\n      { id: 'Metadata', icon: <PermMediaOutlinedIcon /> },\r\n      { id: 'Something', icon: <PublicIcon /> },\r\n      { id: 'Something', icon: <SettingsEthernetIcon /> },\r\n      { id: 'Something', icon: <SettingsInputComponentIcon /> },\r\n    ],\r\n  },\r\n  {\r\n    id: 'Quality',\r\n    children: [\r\n      { id: 'Feedback', icon: <SettingsIcon /> },\r\n      { id: 'Performance', icon: <TimerIcon /> },\r\n      { id: 'Gsuite Test', icon: <PhonelinkSetupIcon /> },\r\n    ],\r\n  },\r\n];\r\n\r\nconst styles = (theme) => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          IMME\r\n        </ListItem>\r\n        \r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Content\\Content.js",["80","81","82","83","84","85","86","87","88","89","90"],"import React , {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport MainContent from '../../MyContent/MainContent/MainContent'\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    maxWidth: 936,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n  }\r\n  \r\n});\r\n\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      {/* <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <SearchIcon className={classes.block} color=\"inherit\" />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search by email address, phone number, or user UID\"\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  className: classes.searchInput,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                Add user\r\n              </Button>\r\n              <Tooltip title=\"Reload\">\r\n                <IconButton>\r\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <MainContent/>\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);","C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Header\\Header.js",[],"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\Dashboard\\Dashboard.js",["91"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './Navigator/Navigator';\r\nimport Content from './Content/Content';\r\nimport Header from './Header/Header';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#18202c',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#404854',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  app: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: theme.spacing(6, 4),\r\n    background: '#eaeff1',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nfunction Dashboard(props) {\r\n  const { classes } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <nav className={classes.drawer}>\r\n          <Hidden smUp implementation=\"js\">\r\n            <Navigator\r\n              PaperProps={{ style: { width: drawerWidth } }}\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n            />\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n          </Hidden>\r\n        </nav>\r\n        <div className={classes.app}>\r\n          <Header onDrawerToggle={handleDrawerToggle} />\r\n          <main className={classes.main}>\r\n            <Content />\r\n          </main>\r\n          <footer className={classes.footer}>\r\n            \r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);",["92","93"],"C:\\Users\\hp\\Desktop\\TT_PortalClientSide\\src\\index.js",[],"C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\Dashboard\\Header\\Header.js",["94","95","96","97","98","99","100","101","102"],"C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\navbar2\\navbar2.js",["103"],"C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\MyContent\\Components\\PlayerCollectionCard.js",["104"],"C:\\Users\\hp\\Desktop\\FYP_Phase1_alpha\\src\\Dashboard\\Navigator\\Navigator.js",["105"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\n\r\nconst categories = [\r\n  {\r\n    id: 'Manage',\r\n    children: [\r\n      { id: 'Visions', icon: <PeopleIcon />, active: true },\r\n      { id: 'Domains', icon: <DnsRoundedIcon /> },\r\n      { id: 'Roles', icon: <PermMediaOutlinedIcon /> },\r\n      { id: 'Goals', icon: <PublicIcon /> },\r\n      { id: 'Projects', icon: <SettingsEthernetIcon /> },\r\n      { id: 'Appointments', icon: <SettingsInputComponentIcon /> },\r\n      { id: 'Tasks', icon: <SettingsInputComponentIcon /> },\r\n\r\n    ],\r\n  },\r\n  {\r\n    id: 'Feedback',\r\n    children: [\r\n      { id: 'Task Feedback', icon: <SettingsIcon /> },\r\n      { id: 'Performance', icon: <TimerIcon /> },\r\n      { id: 'Gsuite Test', icon: <PhonelinkSetupIcon /> },\r\n    ],\r\n  },\r\n];\r\n\r\nconst styles = (theme) => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          IMME\r\n        </ListItem>\r\n        \r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":9,"column":17,"nodeType":"112","endLine":9,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":2,"column":16,"nodeType":"115","messageId":"116","endLine":2,"endColumn":22},{"ruleId":"113","severity":1,"message":"119","line":2,"column":23,"nodeType":"115","messageId":"116","endLine":2,"endColumn":29},{"ruleId":"113","severity":1,"message":"120","line":3,"column":9,"nodeType":"115","messageId":"116","endLine":3,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":23,"column":29,"nodeType":"112","endLine":23,"endColumn":69},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","replacedBy":"122"},{"ruleId":"113","severity":1,"message":"123","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},{"ruleId":"113","severity":1,"message":"124","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"125","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"126","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":15},{"ruleId":"113","severity":1,"message":"127","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"128","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":12},{"ruleId":"113","severity":1,"message":"129","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"130","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"113","severity":1,"message":"131","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":15},{"ruleId":"113","severity":1,"message":"132","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":18},{"ruleId":"113","severity":1,"message":"133","line":13,"column":8,"nodeType":"115","messageId":"116","endLine":13,"endColumn":18},{"ruleId":"113","severity":1,"message":"134","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":19},{"ruleId":"113","severity":1,"message":"135","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":19},{"ruleId":"106","replacedBy":"136"},{"ruleId":"108","replacedBy":"137"},{"ruleId":"113","severity":1,"message":"138","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"129","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"139","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"140","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":12},{"ruleId":"113","severity":1,"message":"141","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},{"ruleId":"113","severity":1,"message":"142","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":25},{"ruleId":"113","severity":1,"message":"143","line":13,"column":8,"nodeType":"115","messageId":"116","endLine":13,"endColumn":11},{"ruleId":"113","severity":1,"message":"144","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":12},{"ruleId":"113","severity":1,"message":"145","line":45,"column":20,"nodeType":"115","messageId":"116","endLine":45,"endColumn":34},{"ruleId":"110","severity":1,"message":"111","line":9,"column":17,"nodeType":"112","endLine":9,"endColumn":54},{"ruleId":"113","severity":1,"message":"146","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"123","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'MainPage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'ScrollRestoration' is defined but never used.",["147"],["148"],"'HomeIcon' is defined but never used.","'Component' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'RefreshIcon' is defined but never used.","'Copyright' is defined but never used.",["147"],["148"],"'Avatar' is defined but never used.","'Hidden' is defined but never used.","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'onDrawerToggle' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]